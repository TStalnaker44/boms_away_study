{"0": {"meta": {"StartDate": "2023-03-22 16:56:08", "EndDate": "2023-03-23 07:48:38", "Status": "IP Address", "Progress": "100", "Duration": "53549", "Finished": "True", "RecordedDate": "2023-03-23 07:48:38", "ResponseID": "R_3QSpMLkj5ObLdYm", "UserLanguage": "EN"}, "definition": {"D1": "Yes", "D2": "The SBOM should describe all components (including direct and indirect / transitive dependencies) that are executed when the software is executed.\n\nIt should provide sufficient information to completely understand the identity (including version) of the component or dependency.\n\nIf a component is being described which is provided outside of a standard package ecosystem (e.g. PyPI, NPM, etc.), then a URL should be provided from which the dependency can be downloaded.", "D3": "Not very many", "D4": "The NTIA's minimum elements for SBOMs - specifies a very limited number of data points required to be included for an SBOM"}, "legal": {"L1": "Ideally, an SBOM should include information sufficient to demonstrate the set of differences from a prior SBOM for a prior version of the software / hardware.\n\nFor example, in SPDX, an SBOM which uses Relationships to indicate things like (1) which source files are compiled into which object / binary files; and/or (2) which files or packages are derived from earlier versions, can assist in demonstrating the delta changes between the earlier and new versions of software / hardware. This may be helpful in facilitating faster approvals, by identifying only the specific changes that were made.", "L2": {"answers": "No", "other": ""}, "L3": "SPDX SBOMs are currently (as of version 2.3) required to be made available under the Creative Commons Zero license, CC0-1.0, which explicitly disclaims warranties for its contents. This may lead to a conclusion that the SBOM producer does not take on liability for inaccuracies or incompleteness.", "L4": "Relatedly, most open source SBOM generation tools are made available under open source licenses which disclaim warranties and liability for downstream uses of those tools. Absent something like an active or malicious / intentional creation of inaccurate data, I would not find it likely that an open source tool creator would be liable for inaccuracies.\n\nCreators of proprietary / commercial SBOM generation tool may of course choose to offer greater warranties, indemnities, etc. in exchange for a fee. Service providers using either open source or proprietary tools to provide services generating SBOMs may choose to do the same.", "L5": "In highly regulated fields, I believe it is likely that in the near future it will become a standard provision.\n\nIn licenses and contracts for lower-risk software sales, I think it is unlikely that this will become a standard requirement unless and until (1) tooling to generate SBOMs is ubiquitous throughout build tools used for producing software, and (2) there exists more usable tooling for recipients of SBOM data to consume, transform and analyze it effectively.", "L6": "No. Any SBOM creator is only ever going to be capable of stating facts to the best of their knowledge. A requirement for them to certify that it is complete or correct is only going to result in fear of creating SBOMs. \"Perfect\" should not be the enemy of \"good.\"", "L7": "The sort of information included in an SBOM for distributed software should not include \"proprietary\" information or trade secrets in the first place.\n\nAn SBOM should include information necessary to communicate the composition of software. In an SPDX SBOM, this may include information about file names and hashes, but not the actual contents of the files; it may also include packages' names, versions and other identifying information for other components and dependencies.\n\nAll of this information should be treated as appropriate to include in an SBOM and should not be considered proprietary or trade secret. If supply chain security is to be taken seriously, it cannot reasonably be considered a software vendor's trade secret to know that software they have distributed incorporates version X.Y of dependency Z. The only way that software supply chain security can be meaningful is if recipients of software have transparency into its composition. An SBOM enables communicating this metadata, without compromising the vendor's contents of their source code itself if they do not choose to provide it.", "L8": "I can't speak to what the actual legal obligations or commitments are for any particular software vendor. Among other things, this may depend on commitments that the vendor has made to particular customers in their customer contracts, etc.\n\nThat said, regarding what _should_ be legal obligations in this area, personally I tend to feel that it should include the following:\n\n(1) Providers of software should not be able to utilize copyright laws, confidentiality / NDA terms, or any other mechanism to prohibit security researchers or others from responsibly disclosing vulnerabilities that they identify.\n(2) As part of that, if the software provider establishes a reasonable responsible disclosure process with reasonable timeframes, etc., then the security researcher should only be able to take advantage of the safe harbor in #1 if they follow that process. This incentivizes companies to establish a reasonable process if they don't already have one.\n(3) I am not sure whether a software provider should be required to disclose vulnerabilities immediately in a public manner. But if they become aware of a vulnerability and do not promptly act to remediate it, or to enable others to do so, then I think they ought to bear some liability for harms that result from this."}, "AI": {"AI2": "For this particular context, I don't view a \"DataBOM\" or this particular question as being any different from SBOMs in the software context.\n\nTo my knowledge, most open source licenses don't have anything particular to say about use of the software as a training data set in AI models. The question is really two things:\n\n(1) is any given open source license's condition \"triggered\" to require attributions to be provided?\n(2) if so, then are the attributions adequately provided?\n\n#1 isn't a question about BOMs at all. It's a question about whether a particular use of software / data / other content meets the license's required threshold for \"distribution\", \"sharing\", \"creating a derivative work\", or whatever conditions the license includes.\n\nAssuming #1 is \"yes\", then #2 is really a question about how \"complete and detailed\" the DataBOM is. Looking at something like the \"MIT License\" (https://spdx.org/licenses/MIT.html), if the condition in the first paragraph is met, then the obligation in the second paragraph is to include the copyright notice and permission notice in all copies or substantial portions of the Software. Depending on how the DataBOM is structured and what data it contains, it might meet that requirement or it might not.", "AI3": "Yes"}, "demographics": {"Q1": "13"}}}